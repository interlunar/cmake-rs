var searchIndex = JSON.parse('{\
"cmake":{"doc":"A build dependency for running `cmake` to build a native…","i":[[3,"Config","cmake","Builder style configuration for a pending CMake build.",null,null],[5,"build","","Builds the native library rooted at `path` with the…",null,[[["path",3],["asref",8]],["pathbuf",3]]],[11,"get_profile","","Return explicitly set profile or infer `CMAKE_BUILD_TYPE`…",0,[[]]],[11,"new","","Creates a new blank set of configuration to build the…",0,[[["path",3],["asref",8]],["config",3]]],[11,"pic","","Sets flag for PIC. Otherwise use cc::Build platform default",0,[[],["config",3]]],[11,"generator","","Sets the build-tool generator (`-G`) for this compilation.",0,[[["asref",8],["osstr",3]],["config",3]]],[11,"cflag","","Adds a custom flag to pass down to the C compiler,…",0,[[["asref",8],["osstr",3]],["config",3]]],[11,"cxxflag","","Adds a custom flag to pass down to the C++ compiler,…",0,[[["asref",8],["osstr",3]],["config",3]]],[11,"asmflag","","Adds a custom flag to pass down to the ASM compiler,…",0,[[["asref",8],["osstr",3]],["config",3]]],[11,"define","","Adds a new `-D` flag to pass to cmake during the…",0,[[],["config",3]]],[11,"register_dep","","Registers a dependency for this compilation on the native…",0,[[],["config",3]]],[11,"target","","Sets the target triple for this compilation.",0,[[],["config",3]]],[11,"no_build_target","","Disables the cmake target option for this compilation.",0,[[],["config",3]]],[11,"host","","Sets the host triple for this compilation.",0,[[],["config",3]]],[11,"out_dir","","Sets the output directory for this compilation.",0,[[["path",3],["asref",8]],["config",3]]],[11,"profile","","Sets the `CMAKE_BUILD_TYPE=build_type` variable.",0,[[],["config",3]]],[11,"static_crt","","Configures whether the /MT flag or the /MD flag will be…",0,[[],["config",3]]],[11,"build_arg","","Add an argument to the final `cmake` build step",0,[[["asref",8],["osstr",3]],["config",3]]],[11,"env","","Configure an environment variable for the `cmake`…",0,[[],["config",3]]],[11,"build_target","","Sets the build target for the final `cmake` build step,…",0,[[],["config",3]]],[11,"uses_cxx11","","Alters the default target triple on OSX to ensure that…",0,[[],["config",3]]],[11,"always_configure","","Forces CMake to always run before building the custom…",0,[[],["config",3]]],[11,"very_verbose","","Sets very verbose output.",0,[[],["config",3]]],[11,"build","","Run this configuration, compiling the library with all the…",0,[[],["pathbuf",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]]],"p":[[3,"Config"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);